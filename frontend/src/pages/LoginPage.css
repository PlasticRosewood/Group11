body {
  background-image: 
    linear-gradient(
      rgba(119, 119, 119, 0.3), /* Red with some transparency */
      rgba(0, 0, 0, 0.5)  /* Darker gradient overlay */
    ),
    url('../assets/argyle.png');
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  margin: 0;
  height: 100vh;
  background-color: black;
}

.outer-container {
  width: 90vw;
  height: 90vh;
  margin: auto;
  background-color: black;
  border: 1px solid black;
  display: flex;
  overflow: hidden;
  border-radius: 1%;;
}

.background {
  display: flex;
  flex: 1;
}

.left-panel {
  flex: 65%;
  display: flex;
  flex-direction: column; 
  justify-content: space-between;  
  align-items: center;
  background-color: #333;
  padding: 10px;
  position: relative; 
  overflow: hidden;  
   background-image: url('../assets/argyle.png');
   

}

@keyframes scrollUp {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-100%); 
  }
}


.right-panel {
  flex: 35%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  background-color: white;

}
.title-container {
  flex-grow: 1;  
  display: flex;
  justify-content: center; 
  align-items: flex-start;
}
.form-container {
  
  flex-grow: 7;  
  display: flex;
  flex-direction: column;
  align-items: center;
}
.titre {
  margin-top: 20%;
  font-size: 100px;
  z-index: 3;

}



#buttonContainer {
  margin-top: 10%;
  display: flex;
  justify-content: center;
  gap: 60px;
  width: 100%;
}

.button {
  background: none;
  border: none;
  color: #333;
  font-size: 18px;
  cursor: pointer;
  text-decoration: underline;
}

.line-break {
  display: block;
  width: 1px;
  height: 40px;
  background-color: black;
  margin-top: 10px;
}

#newUserForm,
#existingUserForm {
  display: none;
  gap: 20%; /* Increased gap to create more space between the input fields */
  width: 100%;
  margin-top: 10%; /* Optional: Adds a gap between the form container and the inputs */
}

input[type="text"],
input[type="email"],
input[type="password"] {
  padding: 10px;
  width: 100%;
  font-size: 16px;
  border: none;
  border-bottom: 2px solid rgb(177, 177, 177); /* Bottom border for the line effect */
  background-color: transparent; /* Remove background color */
  outline: none; /* Remove outline when clicked */
  transition: border-bottom-color 0.3s ease; /* Smooth transition for border color */
  color: black;
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="password"]:focus {
  border-bottom-color: black; 
}

#signUp,
#logIn {
  padding: 10px;
  font-size: 16px;
  background-color: #333;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

#signUp:hover,
#logIn:hover {
  background-color: #444;
}



#newUserForm.show,
#existingUserForm.show {
  display: grid; /* Display when activated */
}

.wrapper {
  width: 100%;  /* Adjust width for better layout */
  height: 49%;  /* Adjust height as needed */
  mask-image: linear-gradient(
    to right,
    rgba(0, 0, 0, 0) 0%,        /* Fully transparent at the left edge */
    rgba(0, 0, 0, 1) 5%,        /* Gradual fade starts at 5% */
    rgba(0, 0, 0, 1) 95%,       /* Content remains fully visible between 5% to 95% */
    rgba(0, 0, 0, 0) 100%       /* Fully transparent at the right edge */
  );
}


@keyframes scrollLeft {
  to {
    left: -30%; /* Adjust to match item width */
  }
}

.item {
  width: 30%;
  height: 48%;  /* Increase height here */
  background-color: red;
  border-radius: 6px;
  position: absolute;
  left: max(calc(28% * 8), 100%); /* Starting position */
  animation: scrollLeft 30s linear infinite;
  
}

.item1 {
  animation-delay: calc(30s / 8 * (8 - 1) * -1);
}

.item2 {
  animation-delay: calc(30s / 8 * (8 - 2) * -1);
}

.item3 {
  animation-delay: calc(30s / 8 * (8 - 3) * -1);
}

.item4 {
  animation-delay: calc(30s / 8 * (8 - 4) * -1);
}

.item5 {
  animation-delay: calc(30s / 8 * (8 - 5) * -1);
}

.item6 {
  animation-delay: calc(30s / 8 * (8 - 6) * -1);
}

.item7 {
  animation-delay: calc(30s / 8 * (1) * -1);
}

.item8 {
  animation-delay: calc(30s / 8 * (0) * -1);
}
